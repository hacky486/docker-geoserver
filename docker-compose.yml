version: '3.4'

volumes:
   db-backups:
   geoserver-data:
   geogig-db-data:
   geo-db-data:

networks:
  proxy:
    external: true
  traefik:
    external: true
    
services:
   db:
      image: kartoza/postgis:10.0-2.4
      volumes:
         - geo-db-data:/var/lib/postgresql
      networks:
        - proxy
        - traefik
      ports:
        - "25432:5432"
      deploy:
        mode: replicated
        replicas: 1
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=proxy"
          - "traefik.port=5432"
          - "traefik.backend=db"
          - "traefik.frontend.rule=Host:db.yankeewhite.duckdns.org"
      env_file:
      - docker-env/geogig-db.env
      restart: on-failure
      healthcheck:
        test: "exit 0"

   geogig-db:
      image: kartoza/postgis:10.0-2.4
      volumes:
         - geogig-db-data:/var/lib/postgresql
         - db-backups:/backups
      env_file:
         - docker-env/geogig-db.env
      restart: on-failure
      healthcheck:
        test: "exit 0"

   geoserver:
      image: kartoza/geoserver:2.13.0
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      networks:
        - traefik
        - proxy
      ports:
        - "8600:8080"
      deploy:
        mode: replicated
        replicas: 1
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=proxy"
          - "traefik.port=8080"
          - "traefik.backend=geoserver"
          - "traefik.frontend.rule=Host:geoserver.yankeewhite.duckdns.org"
      restart: on-failure
      env_file:
        - docker-env/geoserver.env
      depends_on:
        db:
          condition: service_healthy
        geogig-db:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3

   geogig:
      image: kartoza/geogig:latest
      ports:
        - "8182:8080"
      networks:
        - proxy
        - traefik
      deploy:
        mode: replicated
        replicas: 1
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=proxy"
          - "traefik.port=8080"
          - "traefik.backend=geogig"
          - "traefik.frontend.rule=Host:geogig.yankeewhite.duckdns.org"        
      restart: on-failure
      depends_on:
        db:
          condition: service_healthy
        geogig-db:
          condition: service_healthy
      env_file:
        - docker-env/geogig.env
      healthcheck:
        test: "exit 0"

   geogig-db-dbbackups:
      image: kartoza/pg-backup:10.0
      volumes:
        - db-backups:/backups
      env_file:
      - docker-env/geogig-db-backups.env
      restart: on-failure
      depends_on:
        geogig-db:
          condition: service_healthy

   db-dbbackups:
     image: kartoza/pg-backup:10.0
     volumes:
     - db-backups:/backups
     env_file:
     - docker-env/db-backups.env
     restart: on-failure
     depends_on:
       db:
         condition: service_healthy